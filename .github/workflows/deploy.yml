name: Build and Deploy

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Get current date
      id: date
      run: echo "date=$(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_OUTPUT

    - name: Extract version info
      id: version
      run: |
        VERSION_CODE=$(grep 'versionCode' composeApp/build.gradle.kts | awk '{print $3}')
        VERSION_NAME=$(grep 'versionName' composeApp/build.gradle.kts | awk -F\" '{print $2}')
        echo "version_code=$VERSION_CODE" >> $GITHUB_OUTPUT
        echo "version_name=$VERSION_NAME" >> $GITHUB_OUTPUT

    - name: Update HTML with version info
      run: |
        sed -i "s/{{VERSION_NAME}}/${{ steps.version.outputs.version_name }}/g" website/index.html
        sed -i "s/{{VERSION_CODE}}/${{ steps.version.outputs.version_code }}/g" website/index.html
        sed -i "s/{{BUILD_DATE}}/${{ steps.date.outputs.date }}/g" website/index.html

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v2

    - name: Make Gradle executable
      run: chmod +x ./gradlew

    - name: Build Release APK
      run: ./gradlew assembleRelease
      env:
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS }}

    - name: Create website directory
      run: mkdir -p website

    - name: Copy APK to website directory
      run: cp composeApp/build/outputs/apk/release/composeApp-release.apk website/employee-attendance-system.apk
        
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./website
